<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:beans="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <!--登陆页不拦截-->
    <http pattern="/login" security="none" />
    <!--拦截 admin 所有请求-->
    <http  access-denied-page="/sorry">
        <!--<intercept-url pattern="/test/**" access="ROLE_TEST" />-->
        <!--<intercept-url pattern="/admin/**" access="ROLE_ADMIN" />                                   &lt;!&ndash;第一道防线&ndash;&gt;-->
        <form-login
                login-page="/login"
                default-target-url="/login"
                authentication-failure-url="/login?login_error=t"  />
        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
        </session-management>
        <!--         <remember-me key="elim" user-service-ref="securityManager"/> -->
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityInterceptor"/>
    </http>

    <beans:bean id="securityInterceptor" class="filter.MyFilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
        <beans:property name="securityMetadataSource" ref="securityMetadataSource" />
    </beans:bean>


    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="msecurityManager">
            <!--如果用户的密码采用加密的话 <password-encoder hash="md5" /> -->
        </authentication-provider>
    </authentication-manager>
    <!--在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 -->
    <beans:bean id="msecurityManager" class="security.SecurityManagerSupport"/>
    <!--访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->W'W'W
    <beans:bean id="myAccessDecisionManagerBean"
           class="security.MyAccessDecisionManager">
    </beans:bean>
    <!--资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
    <beans:bean id="securityMetadataSource"
            class="security.MyInvocationSecurityMetadataSource" />

</beans:beans>